:root {
    // Colors
    --neutral-800: #ffffff;
    --neutral-700: #f7f7f7;
    --neutral-600: #E2E2E2;
    --neutral-500: #afafaf;
    --neutral-400: #757575;
    --neutral-100: #2f2f2e;

    --green-800: #D5EDD9;
    --green-700: #BBEDC6;
    --green-600: #88DBA8;
    --green-500: #57D096;
    --green-400: #23b280;
    --green-300: #299A77;
    --green-200: #268268;
    --green-100: #1E5749;

    --blue-800: #EFFBFA;
    --blue-400: #37A7AA;
    --blue-100: #134963;

    --yellow-800: #FFFBDB;
    --yellow-400: #FCD404;
    --yellow-100: #87711A;

    --pink-800: #F8E2E8;
    --pink-400: #D75A6A;
    --pink-100: #871A1C;

    //Spacing
    --space-default: 1.6rem;
    --space-quart: calc(var(--space-default) / 4); //4
    --space-half: calc(var(--space-default) / 2); //8
    --space-double: calc(var(--space-default) * 2); //32
    --space-quad: calc(var(--space-default) * 4); //64
    --space-oct: calc(var(--space-default) * 8); //128
    --space-sex: calc(var(--space-default) * 16);  //256

    //Font Sizes
    --type-xxs:     1.3rem; //base * 0.72
    --type-xs:      1.5rem; //base * 0.83
    --type-sm:      1.6rem; //base * 0.88   //used for eyebrows only
    --type-default: 1.8rem;
    --type-md:      2.0rem; //base * 1.10
    --type-lg:      2.4rem; //base * 1.33
    --type-xl:      4.0rem; //base * 2.22
    --type-xxl:     8.0rem; //base * 4.44
    --type-xxxl:   12.0rem; //base * 6.67


    $map: (50rem: 1.4rem, 150rem: 1.5rem);
    @include poly-fluid-sizing('--type-xs', $map);

    $map: (50rem: 1.5rem, 150rem: 1.6rem);
    @include poly-fluid-sizing('--type-sm', $map);

    $map: (50rem: 1.7rem, 150rem: 1.8rem);
    @include poly-fluid-sizing('--type-default', $map);

    $map: (50rem: 1.9rem, 150rem: 2rem);
    @include poly-fluid-sizing('--type-md', $map);

    $map: (50rem: 2.1rem, 150rem: 2.4rem);
    @include poly-fluid-sizing('--type-lg', $map);

    $map: (50rem: 3.6rem, 150rem: 4rem);
    @include poly-fluid-sizing('--type-xl', $map);

    $map: (50rem: 5rem, 150rem: 8rem);
    @include poly-fluid-sizing('--type-xxl', $map);

    $map: (50rem: 8rem, 150rem: 12rem);
    @include poly-fluid-sizing('--type-xxxl', $map);

    //Line Heights
    --lh-default: 1.5;
    --lh-title: .9;
    --lh-sm: 1.3;
    --lh-xs: 1;


    //Design Tokens
    --timing: .15s;
    --easing: cubic-bezier(.2, 0, .8, 1);
    --box-shadow: 0 0 1px rgba(17,17,73,0.25);
    --box-shadow-large: 0 4px 8px rgba(17,17,73,0.25);
    --measure: 45ch;
}

$width-xs: 0;
$width-sm: 500px;
$width-md: 800px;
$width-lg: 1000px;
$width-xl: 1500px;

$breakpoints: (
sm: $width-sm,
md: $width-md,
lg: $width-lg,
xl: $width-xl
);

@mixin breakpoint($breakpoint) {
// If the breakpoint exists in the map.
    @if map-has-key($breakpoints, $breakpoint) {

        // Get the breakpoint value.
        $breakpoint-value: map-get($breakpoints, $breakpoint);

        // Write the media query.
        @media (min-width: $breakpoint-value) {
        @content;
    }

// If the breakpoint doesn't exist in the map.
    } @else {
    // Log a warning.
        @warn 'Invalid breakpoint: #{$breakpoint}.';
    }
}